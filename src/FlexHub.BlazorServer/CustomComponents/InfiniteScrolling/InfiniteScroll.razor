@inject IJSRuntime JSRuntime
@ChildContent

@code
{
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public string ObserverTargetId { get; set; }
    [Parameter]
    public TimeSpan Delay { get; set; } = TimeSpan.FromMilliseconds(100);
    [Parameter]

    public EventCallback<bool> ObservableTargetReached { get; set; }

    private DotNetObjectReference<InfiniteScroll> _objectRef;
    private bool _canExecute = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _objectRef = DotNetObjectReference.Create(this);
            var initResult = await JSRuntime.InvokeAsync<dynamic>("Observer.Initialize", _objectRef, ObserverTargetId);
        }
    }

    [JSInvokable]
    public async Task OnIntersection()
    {
        if (_canExecute == false) return;

        _canExecute = false;

        await ObservableTargetReached.InvokeAsync(true);

        await Task.Delay(Delay);
        _canExecute = true;
    }
}
